version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: boleto-postgres
    environment:
      POSTGRES_DB: boleto_reminder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
      # Criar mÃºltiplos bancos
      POSTGRES_MULTIPLE_DATABASES: boleto_reminder,evolution
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    container_name: boleto-redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Evolution API for WhatsApp
  evolution-api:
    image: atendai/evolution-api:v2.1.1
    container_name: evolution-api
    environment:
      # Server Configuration
      SERVER_TYPE: http
      SERVER_PORT: 8080
      SERVER_URL: http://localhost:8080
      CORS_ORIGIN: '*'
      CORS_METHODS: 'GET,PUT,POST,DELETE,OPTIONS'
      CORS_CREDENTIALS: 'true'
      
      # Database Configuration  
      DATABASE_ENABLED: true
      DATABASE_PROVIDER: postgresql
      DATABASE_CONNECTION_URI: postgresql://postgres:postgres123@postgres:5432/evolution
      DATABASE_CONNECTION_CLIENT_NAME: evolution
      
      # Redis Configuration (temporarily disabled)
      REDIS_ENABLED: false
      # REDIS_URI: redis://redis:6379/0
      # REDIS_PREFIX_KEY: evolution
      
      # Auth Configuration
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: evolution-api-key-2024
      AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES: true
      
      # Instance Configuration
      DEL_INSTANCE: false
      
      # Webhook Configuration
      WEBHOOK_GLOBAL_ENABLED: true
      WEBHOOK_GLOBAL_URL: http://host.docker.internal:4000/api/webhooks/evolution
      WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS: false
      
      # QR Code Configuration
      QRCODE_LIMIT: 30
      QRCODE_COLOR: '#198754'
      
      # Chatwoot Integration (disabled for now)
      CHATWOOT_MESSAGE_READ: true
      CHATWOOT_MESSAGE_DELETE: true
      
      # Typebot Integration (disabled for now)
      TYPEBOT_ENABLED: false
      
      # Log Configuration
      LOG_LEVEL: ERROR
      LOG_COLOR: true
      LOG_BAILEYS: error
      
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/manager/global || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 10 &&
        node dist/src/main.js
      "
    networks:
      - default

  # PGAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: boleto-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@boletoreminder.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  evolution_instances:
  evolution_store:
  pgadmin_data:

networks:
  default:
    driver: bridge